apiVersion: test.dev/v1
kind: CyberPhysicalApplication
metadata:
  name: "cpa-1"
spec:
  # debug migrazione
  migrate: false
  mirrorTime: 100
  source: ""
  twinType: "simple"
  twinOf:
    - "led_1"
  requirements:
    preferredAffinity: "mec"
    odte: 0.8
  deployments:
    - type: "Kubernetes"
      affinity: "edge"
      configs:
        - apiVersion: apps/v1
          kind: Deployment
          metadata:
            namespace: default
            name: dt-1-deployment-edge
            labels:
              app: dt-1-edge
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: dt-1-edge
            template:
              metadata:
                labels:
                  app: dt-1-edge
                annotations:
                  # prometheusUrl: "http://prometheus-service.istio-system.svc.cluster.local:9090"
                  prometheusUrl: "http://localhost:30080"
                  prometheus.io/scrape: "true"
                  prometheus.io/port: "8001"
                  prometheus.io/path: "/metrics"
              spec:
                volumes:
                  - name: tmp-volume
                    nfs:
                      server: nfs-server-boxplot.test
                      path: /exports
                      readOnly: no
                containers:
                  - name: dt-1-edge
                    image: rssgai/dt-flask:massive-hot-start-v1
                    volumeMounts:
                      - name: tmp-volume
                        mountPath: /var/tmp/dt
                    ports:
                      - containerPort: 8001
                    env:
                      - name: NO_SENSORS
                        value: "1000"
                      - name: EXEC_MEASUREMENTS_FILE_PATH
                        value: /var/tmp/dt/exec_measurements_hs.txt

        - apiVersion: v1
          kind: Service
          metadata:
            namespace: default
            name: dt-1-service-edge
          spec:
            selector:
              app: dt-1-edge
            ports:
              - name: http
                port: 8001
                targetPort: 8001
            type: NodePort

    - type: "Kubernetes"
      affinity: "mec"
      configs:
        - apiVersion: apps/v1
          kind: Deployment
          metadata:
            namespace: default
            name: dt-1-deployment-mec
            labels:
              app: dt-1-mec
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: dt-1-mec
            template:
              metadata:
                labels:
                  app: dt-1-mec
                annotations:
                  # prometheusUrl: "http://prometheus-service.istio-system.svc.cluster.local:9090"
                  prometheusUrl: "http://localhost:30080"
                  prometheus.io/scrape: "true"
                  prometheus.io/port: "8001"
                  prometheus.io/path: "/metrics"
              spec:
                volumes:
                  - name: tmp-volume
                    nfs:
                      server: nfs-server-boxplot.test
                      path: /exports
                      readOnly: no
                containers:
                  - name: dt-1-mec
                    image: rssgai/dt-flask:massive-hot-start-v1
                    volumeMounts:
                      - name: tmp-volume
                        mountPath: /var/tmp/dt
                    ports:
                      - containerPort: 8001
                    env:
                      - name: NO_SENSORS
                        value: "1000"
                      - name: EXEC_MEASUREMENTS_FILE_PATH
                        value: /var/tmp/dt/exec_measurements_hs.txt

        - apiVersion: v1
          kind: Service
          metadata:
            namespace: default
            name: dt-1-service-mec
          spec:
            selector:
              app: dt-1-mec
            ports:
              - name: http
                port: 8001
                targetPort: 8001
            type: NodePort
